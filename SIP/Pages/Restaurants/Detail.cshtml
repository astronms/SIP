@page "{restaurantId:int}"
@model SIP.Pages.Restaurants.DetailModel
@{
}
<h2>@Model.Restaurant.Name</h2>
<div>
    Id: @Model.Restaurant.Id
</div>
<div>
    Długość geograficzna: @Model.Restaurant.Longitude
</div>
<div>
    Szerokość geograficzna: @Model.Restaurant.Latitude
</div>
<div>
    Adress: @Model.Restaurant.Address
</div>
<div>
    Opis: @Model.Restaurant.Description
</div>
<div>
    Ocena: @Model.Restaurant.Rating
</div>
<div>
    <a href="" id="fb_share"><img src="https://1.bp.blogspot.com/-Oycat4R9GuE/XHguPKA2ABI/AAAAAAAAIHU/6FiEpQI0oLQkRjqhXh_gITbSwLFFldwLACK4BGAYYCw/s1600/icon%2Bshare%2Bfacebook.png" style="width:80px;height:28px;"/></a>

    <script>
        window.onload = function () {
            fb_share.href = 'http://www.facebook.com/share.php?u=' + encodeURIComponent(location.href);
        }
    </script>
</div>

<div>
    <div class="text-center">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

        <div id="googleMap" style="height:500px;width:100%;"></div>
        <script>
            function myMap() {
                var myCenter = new google.maps.LatLng(@Model.Restaurant.Latitude, @Model.Restaurant.Longitude);
                            var mapProp = { center: myCenter, zoom: 16, scrollwheel: true, draggable: true, mapTypeId: google.maps.MapTypeId.ROADMAP };
                            var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
                            var marker = new google.maps.Marker({ position: myCenter });
                            marker.setMap(map);
                const directionsService = new google.maps.DirectionsService();
                const directionsRenderer = new google.maps.DirectionsRenderer({
                    draggable: true,
                    map,
                    panel: document.getElementById("right-panel"),
                });
                directionsRenderer.addListener("directions_changed", () => {
                    computeTotalDistance(directionsRenderer.getDirections());
                });

                displayRoute(
                    "Gdańsk",
                    myCenter,
                    directionsService,
                    directionsRenderer
                );
            }


            function getDirection(map, latLng) {
                var marker = new google.maps.Marker({
                    map: map,
                    position: latLng,
                    draggable: true
                });
                var Lat = latLng.lat();
                var Lng = latLng.lng();

            }

            function displayRoute(origin, destination, service, display) {
                service.route(
                    {
                        origin: origin,
                        destination: destination,
                        travelMode: google.maps.TravelMode.DRIVING,
                        avoidTolls: true,
                    },
                    (result, status) => {
                        if (status === "OK" && result) {
                            display.setDirections(result);
                        } else {
                            alert("Could not display directions due to: " + status);
                        }
                    }
                );
            }

            function computeTotalDistance(result) {
                let total = 0;
                const myroute = result.routes[0];

                if (!myroute) {
                    return;
                }

                for (let i = 0; i < myroute.legs.length; i++) {
                    total += myroute.legs[i].distance.value;
                }
                total = total / 1000;
                document.getElementById("total").innerHTML = total + " km";
            }


        </script>

        <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA7inDNHeEHrSM8D1V3ENK3ATX5uuYM_nw&callback=myMap"></script>

    </div>

</div>
@if (Model.Message != null)
{
    <div class="alert alert-secondary">@Model.Message</div>
}

<form method="post">
    <div class="form-group">
        <label asp-for="@Model.Lat">Szerokość Geograficzna</label>
        <input asp-for="@Model.Lat" class="form-control"/>
        <span class="text-danger" asp-validation-for="@Model.Lat"></span>
    </div>
    <div class="form-group">
        <label asp-for="@Model.Lng">Długość Geigraficzna</label>
        <input asp-for="@Model.Lng" class="form-control" />
        <span class="text-danger" asp-validation-for="@Model.Lng"></span>
    </div>
    <button type="submit" class="btn btn-primary">Wyznacz trasę</button>
</form>

<a asp-page="./List" class="btn btn-light">Powrót do wszystkich restauracji.</a>

